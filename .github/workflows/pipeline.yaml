# This workflow will build a .NET Core project
name: .NET Core CI/CD
env:
  AZURE_WEBAPP_NAME: your-app-name    # set this to the name of your Azure Web App
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '5'                 # set this to the .NET Core version to use

on: 
  push:
    branches: 
    # Run the workflow when pushing to the specific branch
    -  master
    -  develop
  pull_request:
    branches:
    # Run the workflow when pull requests in the specific branch
    -  master
    -  develop
  # Allow running the workflow manually from the GitHub UI
  workflow_dispatch:
# Cancel a currently running workflow
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true
jobs:
  build:
    runs-on: windows-latest

    steps:
    # Checks out the source code at the latest commit
    - uses: actions/checkout@v3
    # Installs the .NET SDK on the build machine
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Check default dotnet version
      run: dotnet --version
    - uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        # Look to see if there is a cache hit for the corresponding requirements file
        key: ${{ runner.os }}-nuget
        restore-keys: |
          ${{ runner.os }}-nuget
    # Installs any NuGet packages required.
    - name: Install dependencies
      run: dotnet restore
    # Builds the project
    - name: Build
      run: dotnet build --configuration Release --no-restore
    # Runs any tests in the project
    - name: Test
      run: dotnet test --no-build --verbosity normal
    # Publish the project
    - name: Publish 
      run: dotnet publish -c Release -o ${{github.workspace}}\website\publish

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v3
      with:
        name: publish
        path: ${{github.workspace}}\website\publish

  deploy:
    permissions:
      contents: none
    runs-on: self-hosted
    needs: build
    environment:
      name: 'Development'

    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v3
      with:
        name: publish
        path: ${{github.workspace}}\website\publish
        
    - name: IIS Deploy
      uses: cschleiden/webdeploy-action@v1
      with:
        # IIS website name
        webSiteName: 'mitac'
        # The path to the source directory that will be deployed
        package: ${{github.workspace}}\website\publish
